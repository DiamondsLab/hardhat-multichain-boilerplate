/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { HelloWorlds, HelloWorldsInterface } from "../HelloWorlds";

const _abi = [
  {
    inputs: [],
    name: "getChain",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506102db806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806332e21ae714610030575b600080fd5b61003861004f565b60405161004692919061020b565b60405180910390f35b60006060600046905060048114156100a257806040518060400160405280600781526020017f7365706f6c69610000000000000000000000000000000000000000000000000081525092509250506101bf565b620138818114156100ee57806040518060400160405280600481526020017f616d6f790000000000000000000000000000000000000000000000000000000081525092509250506101bf565b600181141561013857806040518060400160405280600881526020017f657468657265756d00000000000000000000000000000000000000000000000081525092509250506101bf565b608981141561018257806040518060400160405280600781526020017f706f6c79676f6e0000000000000000000000000000000000000000000000000081525092509250506101bf565b806040518060400160405280601081526020017f49444b207768617420746869732069730000000000000000000000000000000081525092509250505b9091565b60006101ce8261023b565b6101d88185610246565b93506101e8818560208601610261565b6101f181610294565b840191505092915050565b61020581610257565b82525050565b600060408201905061022060008301856101fc565b818103602083015261023281846101c3565b90509392505050565b600081519050919050565b600082825260208201905092915050565b6000819050919050565b60005b8381101561027f578082015181840152602081019050610264565b8381111561028e576000848401525b50505050565b6000601f19601f830116905091905056fea26469706673582212206935b85ce6e2ee97b021bf6967bb4c9d4b93b8d49521e8593891faca586a338964736f6c63430008030033";

type HelloWorldsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HelloWorldsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HelloWorlds__factory extends ContractFactory {
  constructor(...args: HelloWorldsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<HelloWorlds> {
    return super.deploy(overrides || {}) as Promise<HelloWorlds>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): HelloWorlds {
    return super.attach(address) as HelloWorlds;
  }
  override connect(signer: Signer): HelloWorlds__factory {
    return super.connect(signer) as HelloWorlds__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HelloWorldsInterface {
    return new utils.Interface(_abi) as HelloWorldsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HelloWorlds {
    return new Contract(address, _abi, signerOrProvider) as HelloWorlds;
  }
}
